//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Baxter.Agents.Automaton.Tests.AutomatonService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AutomatonService.IAutomaton")]
    public interface IAutomaton {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutomaton/GetData", ReplyAction="http://tempuri.org/IAutomaton/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutomaton/GetData", ReplyAction="http://tempuri.org/IAutomaton/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutomaton/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IAutomaton/GetDataUsingDataContractResponse")]
        Baxter.Agents.Automaton.CompositeType GetDataUsingDataContract(Baxter.Agents.Automaton.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutomaton/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IAutomaton/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<Baxter.Agents.Automaton.CompositeType> GetDataUsingDataContractAsync(Baxter.Agents.Automaton.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutomaton/Post", ReplyAction="http://tempuri.org/IAutomaton/PostResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Baxter.Agents.Automaton.CompositeType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        void Post(object ob, string script, object[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutomaton/Post", ReplyAction="http://tempuri.org/IAutomaton/PostResponse")]
        System.Threading.Tasks.Task PostAsync(object ob, string script, object[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutomaton/PostFuture", ReplyAction="http://tempuri.org/IAutomaton/PostFutureResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Baxter.Agents.Automaton.CompositeType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        void PostFuture(object ob, string script, object[] data, System.DateTime runAt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutomaton/PostFuture", ReplyAction="http://tempuri.org/IAutomaton/PostFutureResponse")]
        System.Threading.Tasks.Task PostFutureAsync(object ob, string script, object[] data, System.DateTime runAt);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAutomatonChannel : Baxter.Agents.Automaton.Tests.AutomatonService.IAutomaton, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AutomatonClient : System.ServiceModel.ClientBase<Baxter.Agents.Automaton.Tests.AutomatonService.IAutomaton>, Baxter.Agents.Automaton.Tests.AutomatonService.IAutomaton {
        
        public AutomatonClient() {
        }
        
        public AutomatonClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AutomatonClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AutomatonClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AutomatonClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public Baxter.Agents.Automaton.CompositeType GetDataUsingDataContract(Baxter.Agents.Automaton.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<Baxter.Agents.Automaton.CompositeType> GetDataUsingDataContractAsync(Baxter.Agents.Automaton.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public void Post(object ob, string script, object[] data) {
            base.Channel.Post(ob, script, data);
        }
        
        public System.Threading.Tasks.Task PostAsync(object ob, string script, object[] data) {
            return base.Channel.PostAsync(ob, script, data);
        }
        
        public void PostFuture(object ob, string script, object[] data, System.DateTime runAt) {
            base.Channel.PostFuture(ob, script, data, runAt);
        }
        
        public System.Threading.Tasks.Task PostFutureAsync(object ob, string script, object[] data, System.DateTime runAt) {
            return base.Channel.PostFutureAsync(ob, script, data, runAt);
        }
    }
}
